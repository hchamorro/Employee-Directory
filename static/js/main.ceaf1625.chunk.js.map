{"version":3,"sources":["components/Title/index.js","components/Card/index.js","components/Wrapper/index.js","components/NavBar/index.js","pages/Home/index.js","components/CategoryCard/index.js","pages/Category/index.js","components/SearchForm/index.js","pages/Search/index.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","className","children","Card","name","position","salary","Wrapper","Navbar","to","window","location","pathname","Home","useState","employees","setEmployees","useEffect","EmployeesJSON","console","log","removeEmployee","id","employeesArray","filter","employee","map","key","onClick","CategoryCard","htmlFor","Category","employeeArray","sort","a","b","nameA","nameB","comparison","sortSalary","SearchForm","onSubmit","handleFormSubmit","onChange","handleInput","value","search","list","type","placeholder","Search","results","setResults","findEmployee","toLowerCase","split","join","e","preventDefault","target","nameSearch","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ceaf1625.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"content\">\r\n        <h3>{props.name}</h3>\r\n        <ul>\r\n          <li>\r\n            <strong>Position: </strong>\r\n            {props.position}\r\n          </li>\r\n          <li>\r\n            <strong>Salary: </strong>${props.salary}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {/* <button onClick={() => props.removeEmployee(props.id)}>Delete</button> */}\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\n\r\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className={'navbar-brand'} to=\"/\">\r\n        Home\r\n      </Link>\r\n      <div>\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              to=\"/search\"\r\n              className={\r\n                window.location.pathname === '/search'\r\n                  ? 'nav-link active'\r\n                  : 'nav-link'\r\n              }\r\n            >\r\n              Search\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              to=\"/category\"\r\n              className={\r\n                window.location.pathname === '/category'\r\n                  ? 'nav-link active'\r\n                  : 'nav-link'\r\n              }\r\n            >\r\n              Catagory\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Title from '../../components/Title';\r\nimport Card from '../../components/Card';\r\nimport Wrapper from '../../components/Wrapper';\r\nimport NaveBar from '../../components/NavBar';\r\n\r\nimport EmployeesJSON from './../../employees.json';\r\n\r\nfunction Home() {\r\n  // let [employees, setEmployees] = useState(EmployeesJSON);\r\n\r\n  let [employees, setEmployees] = useState([]);\r\n  //   const [employees, setEmployees] = useState([{\r\n  //     id: '',\r\n  //     name: '',\r\n  //     position: '',\r\n  //     salary: ''\r\n  //   }]);\r\n\r\n  useEffect(() => {\r\n    setEmployees(EmployeesJSON);\r\n    console.log(employees);\r\n  }, []);\r\n\r\n  const removeEmployee = id => {\r\n    let employeesArray = employees.filter(employee => employee.id !== id);\r\n    setEmployees(employeesArray);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title>Employee Directory</Title>\r\n      <NaveBar></NaveBar>\r\n      <Wrapper>\r\n        {employees.map(employee => (\r\n          <Card\r\n            id={employee.id}\r\n            key={employee.id}\r\n            name={employee.name}\r\n            position={employee.position}\r\n            salary={employee.salary}\r\n            removeEmployee={removeEmployee}\r\n          >\r\n            <button onClick={() => removeEmployee(employee.id)}>Delete</button>\r\n          </Card>\r\n        ))}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction CategoryCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <label htmlFor=\"search\">Choose Category: </label>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Title from '../../components/Title';\r\nimport Card from '../../components/Card';\r\nimport Wrapper from '../../components/Wrapper';\r\nimport NaveBar from '../../components/NavBar';\r\nimport CategoryCard from '../../components/CategoryCard';\r\n\r\nimport EmployeesJSON from './../../employees.json';\r\n\r\nfunction Category() {\r\n  let [employees, setEmployees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setEmployees(EmployeesJSON);\r\n    console.log('init set employees', employees);\r\n  }, []);\r\n\r\n  const sortSalary = () => {\r\n    console.log('clicked');\r\n\r\n    const employeeArray = employees.sort((a, b) => {\r\n      const nameA = a.salary;\r\n      const nameB = b.salary;\r\n      let comparison = 0;\r\n      if (nameA > nameB) {\r\n        comparison = 1;\r\n      } else if (nameA < nameB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    });\r\n    console.log('numbers are sorted woo', employeeArray);\r\n    setEmployees(employeeArray);\r\n  };\r\n\r\n  const compare = (a, b) => {\r\n    const nameA = a;\r\n    const nameB = b;\r\n    let comparison = 0;\r\n    if (nameA > nameB) {\r\n      comparison = 1;\r\n    } else if (nameA < nameB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  };\r\n  return (\r\n    <>\r\n      <Title>Employee Directory</Title>\r\n      <NaveBar></NaveBar>\r\n      <Wrapper>\r\n        <CategoryCard>\r\n          <button onClick={() => sortSalary()}> Sort by Salary</button>\r\n        </CategoryCard>\r\n        {employees.map(employee => (\r\n          <Card\r\n            id={employee.id}\r\n            key={employee.id}\r\n            name={employee.name}\r\n            position={employee.position}\r\n            salary={employee.salary}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form onSubmit={props.handleFormSubmit}>\r\n      <div className=\"card\">\r\n        <label htmlFor=\"search\">Search for Employee: </label>\r\n        <input\r\n          onChange={props.handleInput}\r\n          value={props.search}\r\n          name=\"search\"\r\n          list=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Type Emloyee Name\"\r\n          id=\"search\"\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Title from '../../components/Title';\r\nimport Card from '../../components/Card';\r\nimport SeachForm from '../../components/SearchForm';\r\nimport Wrapper from '../../components/Wrapper';\r\nimport NaveBar from '../../components/NavBar';\r\n\r\nimport EmployeesJSON from './../../employees.json';\r\n\r\nfunction Search() {\r\n  let [employees, setEmployees] = useState([]);\r\n  let [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setEmployees(EmployeesJSON);\r\n    setResults(EmployeesJSON);\r\n    console.log(employees);\r\n  }, []);\r\n\r\n  const removeEmployee = id => {\r\n    let employeesArray = employees.filter(employee => employee.id !== id);\r\n    setEmployees(employeesArray);\r\n    setResults(employeesArray);\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.search.value);\r\n    const nameSearch = e.target.search.value;\r\n    findEmployee(nameSearch);\r\n  };\r\n\r\n  const findEmployee = name => {\r\n    let employeeArray = employees.filter(\r\n      employee =>\r\n        employee.name\r\n          .toLowerCase()\r\n          .split(' ')\r\n          .join('') ===\r\n        name\r\n          .toLowerCase()\r\n          .split(' ')\r\n          .join('')\r\n    );\r\n    // setEmployees(employeeArray);\r\n    setResults(employeeArray);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title>Employee Directory</Title>\r\n      <NaveBar></NaveBar>\r\n      <Wrapper>\r\n        <SeachForm handleFormSubmit={handleFormSubmit}></SeachForm>\r\n        {results.map(employee => (\r\n          <Card\r\n            id={employee.id}\r\n            key={employee.id}\r\n            name={employee.name}\r\n            position={employee.position}\r\n            salary={employee.salary}\r\n            removeEmployee={removeEmployee}\r\n          >\r\n            <button onClick={() => removeEmployee(employee.id)}>Delete</button>\r\n          </Card>\r\n        ))}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Category from './pages/Category';\r\nimport Search from './pages/Search';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/Category\" component={Category} />\r\n        <Route exact path=\"/Search\" component={Search} />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}